import pygame
import time
import random

pygame.init()

window_width = 800
window_height = 600

screen = pygame.display.set_mode((window_width, window_height))
pygame.display.set_caption("игра")

player_texture = pygame.image.load("шыш.png")
grass_texture = pygame.image.load("трава.png")
tree_texture = pygame.image.load("дерево тр.png")

health_bar_texture = pygame.Surface((32, 4))  # исправлено
health_bar_texture.fill((255, 0, 0))

cell_size = 32
world_width = 100
world_height = 100

world = [["g" if random.random() < 0.8 else "t" for _ in range(world_width)] for _ in range(world_height)]
tree_health = [[50 for _ in range(world_width)] for _ in range(world_height)]

player_x = 50
player_y = 50

move_time = 0.3
last_move = time.time()

last_hit_time = time.time()
hit_delay = 0.2

show_health_bar = False  # добавлено
tree_health_bar_timer = {}

is_running = True
while is_running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:  # исправлено
            is_running = False

    keys = pygame.key.get_pressed()
    if keys[pygame.K_w] and time.time() - last_move >= move_time:
        if player_y > 0 and world[player_y - 1][player_x] != "t":
            player_y -= 1
            last_move = time.time()
    if keys[pygame.K_s] and time.time() - last_move >= move_time:
        if player_y < world_height - 1 and world[player_y + 1][player_x] != "t":
            player_y += 1
            last_move = time.time()
    if keys[pygame.K_a] and time.time() - last_move >= move_time:
        if player_x > 0 and world[player_y][player_x - 1] != "t":
            player_x -= 1
            last_move = time.time()
    if keys[pygame.K_d] and time.time() - last_move >= move_time:
        if player_x < world_width - 1 and world[player_y][player_x + 1] != "t":
            player_x += 1
            last_move = time.time()

    mouse_buttons = pygame.mouse.get_pressed()
    if mouse_buttons[0]:
        mouse_pos = pygame.mouse.get_pos()
        tree_x = (mouse_pos[0] + cell_size * (player_x - window_width // (2 * cell_size))) // cell_size
        tree_y = (mouse_pos[1] + cell_size * (player_y - window_height // (2 * cell_size))) // cell_size

        if abs(player_x - tree_x) + abs(player_y - tree_y) <= 3 and world[tree_y][tree_x] == "t" and time.time() - last_hit_time >= hit_delay:
            tree_health[tree_y][tree_x] -= 5
            if tree_health[tree_y][tree_x] <= 0:
                world[tree_y][tree_x] = "g"
            last_hit_time = time.time()
            show_health_bar = True  # добавлено
            tree_health_bar_timer[(tree_y, tree_x)] = time.time()  # добавлено

    for tree_coord, bar_timer in list(tree_health_bar_timer.items()):
        if time.time() - bar_timer >= 5:
            del tree_health_bar_timer[tree_coord]

    camera_x = max(0, min(player_x - window_width // (2 * cell_size), world_width - window_width // cell_size))
    camera_y = max(0, min(player_y - window_height // (2 * cell_size), world_height - window_height // cell_size))

    screen.fill((0, 0, 0))
    for y in range(camera_y, min(world_height, camera_y + window_height // cell_size + 1)):
        for x in range(camera_x, min(world_width, camera_x + window_width // cell_size + 1)):
            if world[y][x] == "g":
                screen.blit(grass_texture, ((x - camera_x) * cell_size, (y - camera_y) * cell_size))
            elif world[y][x] == "t":
                screen.blit(tree_texture, ((x - camera_x) * cell_size, (y - camera_y) * cell_size))
                if (y, x) in tree_health_bar_timer:  # добавлено
                    pygame.draw.rect(screen, (255, 255, 255), ((x - camera_x) * cell_size, (y - camera_y) * cell_size - 6, cell_size, 6))
                    pygame.draw.rect(screen, (255, 0, 0), ((x - camera_x) * cell_size, (y - camera_y) * cell_size - 6,
                                                           cell_size * (tree_health[y][x] / 50), 6))

    screen.blit(player_texture, ((player_x - camera_x) * cell_size, (player_y - camera_y) * cell_size))
    pygame.display.flip()

pygame.quit()
